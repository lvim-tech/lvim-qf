local config = require("lvim-qf-loc.config")
local nav = require("lvim-qf-loc.nav")
local menu = require("lvim-qf-loc.menu")
local local_qf_loc = require("lvim-qf-loc.local_qf_loc")
local diagnostics = require("lvim-qf-loc.diagnostics")

local M = {}

M.setup = function(user_config)
    if user_config ~= nil then
        config = vim.tbl_deep_extend("force", config, user_config)
    end
    M.commands()
    diagnostics.init()
end

M.commands = function()
    vim.api.nvim_create_user_command("LvimListQuickFixNext", function()
        nav.quick_fix_next()
    end, {})
    vim.api.nvim_create_user_command("LvimListQuickFixPrev", function()
        nav.quick_fix_prev()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocNext", function()
        nav.lock_next()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocPrev", function()
        nav.lock_prev()
    end, {})
    vim.api.nvim_create_user_command("LvimListQuickFixMenuChoice", function()
        menu.quick_fix_menu_choice()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocMenuChoice", function()
        menu.loc_menu_choice()
    end, {})
    vim.api.nvim_create_user_command("LvimListQuickFixMenuDelete", function()
        menu.quick_fix_menu_delete()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocMenuDelete", function()
        menu.loc_menu_delete()
    end, {})
    vim.api.nvim_create_user_command("LvimListQuickFixSave", function()
        local_qf_loc.quick_fix_save()
    end, {})
    vim.api.nvim_create_user_command("LvimListQuickFixLoad", function()
        local_qf_loc.quick_fix_load()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocSave", function()
        local_qf_loc.loc_save()
    end, {})
    vim.api.nvim_create_user_command("LvimListLocLoad", function()
        local_qf_loc.loc_load()
    end, {})
    vim.api.nvim_create_user_command("LvimDiagnostics", function()
        diagnostics.qf_diagnostics()
    end, {})
end
return M
